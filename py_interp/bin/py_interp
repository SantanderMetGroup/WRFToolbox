#!/usr/bin/env python

########################################################################
#
# py_interp alpha by Markel Garcia Diez and Carlos Blanco
# 
# See the README for info and/or type python py_interp.py -h for help.
#
########################################################################

import py_interp.mainfun as pm
from optparse import OptionParser

def main():
    opt, args = parse_args()
    
    plevs = opt.plevs.split(",")
    varlist = opt.varlist.split(",")
    if opt.vars_to_filter is not None:
        vars_to_filter = opt.vars_to_filter.split(",")
    else:
        vars_to_filter = None
    pm.py_interp_file(opt.ifile, varlist, plevs, vars_to_filter, overwrite=opt.overwrite, verbose=opt.verbose)  

def parse_args():
    parser = OptionParser()
    parser.set_defaults(quiet=False,singlerec=False)
    parser.add_option("-i", dest="ifile", help="Input wrfout file")
    parser.add_option("-v", dest="varlist", default="", 
                      help="Comma sepparated variable list")
    parser.add_option("-f", dest="vars_to_filter", default=None, 
                  help="Comma sepparated variable list")
    parser.add_option("-p", "--plevs", dest="plevs", 
                      help="Comma sepparated pressure level list in hPa")
    parser.add_option("-o", "--overwrite", dest="overwrite", action="store_true", 
                      default=False, help="Overwrite input file")
    parser.add_option("--verbose", dest="verbose", action="store_true", 
                      default=False, help="Get a more detailed log")
    (opt, args) = parser.parse_args()
    return opt, args

if __name__ == "__main__":
    main()